# Load required packages
library(shinydashboard)
library(shiny)
library(bslib)
library(targets)
library(ggplot2)
library(plotly)
# Load pre-saved RDS file
national_data <- targets::tar_read(national_data)
head(national_data)
# Define UI components
color_by <- selectInput(
inputId = "color_var",
label = "Choose Color By:",
choices = c("employers", "strikes"),
selected = "strikes"
)
cards <- list(
card(
full_screen = TRUE,
card_header("Strikes"),
plotlyOutput("strikes")  # Use plotlyOutput instead of plotOutput for interactive plots
)
)
ui <- page_sidebar(title = "Trade Union Data",
sidebar = color_by,
!!!cards)
server <- function(input, output) {
# Reactive expression to generate the ggplot
gg_plot <- reactive({
national_data |>
ggplot(aes(x = Year, y = strikes, size = employers, color = !!sym(input$color_var))) +
geom_point() +
theme_bw()
})
# Render the interactive plot using ggplotly
output$strikes <- renderPlotly({
ggplotly(gg_plot())  # Convert the ggplot object to an interactive plotly plot
})
}
# Run the application
shinyApp(ui, server)
# Run the application
shinyApp(ui, server)
library(targets)
library(tarchetypes)
library(here)
here::i_am("_targets.R")
source(here("functions", "functions.R"))
options(clustermq.schedular = "multicore")
tar_option_set(
packages = c(
"tidyverse",
"targets",
"rmarkdown",
"openxlsx",
"readxl"),
format = "rds")
list(
tar_target(
transformed_,
load_and_transform_data(1),
format = "rds"
),
tar_target(
dc_data,
number_of("District of Columbia", transformed_),
format = "rds"
),
tar_target(
md_data,
number_of("Maryland", transformed_),
format = "rds"
),
tar_target(
va_data,
number_of("Virginia", transformed_),
format = "rds"
),
tar_target(
national_data,
number_of("national", transformed_),
format = "rds"
),
tar_target(
states_vector,
united_states_total_states(),
format = "rds"
),
tar_target(
states_and_territories,
number_of(states_vector, transformed_),
format = "rds"
),
tar_target(
year.strikes.2024.monthly,
month_year_var_number(
state_var = "national",
year_var = 2024,
transformed_data = transformed_
),
format = "rds"
),
tar_target(
year.strikes.2023.monthly,
month_year_var_number(
state_var = "national",
year_var = 2023,
transformed_data = transformed_
),
format = "rds"
),
tar_render(
paper,
here("paper", "strike_analysis.rmd")
),
tar_target(
target_list,
{
list(
dc_data = dc_data,
md_data = md_data,
va_data = va_data,
national_data = national_data,
year.strikes.2024.monthly = year.strikes.2024.monthly,
year.strikes.2023.monthly = year.strikes.2023.monthly,
states_and_territories = states_and_territories
)
}
),
tar_target(output_file,
write_data_to_excel(target_list,
here("data", "output", "tableau_upload.xlsx")),
format = "file")
)
tar_make()
tar_visnetwork()
library(targets)
library(tarchetypes)
library(here)
here::i_am("_targets.R")
source(here("functions", "functions.R"))
options(clustermq.schedular = "multicore")
tar_option_set(
packages = c(
"tidyverse",
"targets",
"rmarkdown",
"openxlsx",
"readxl"),
format = "rds")
list(
tar_target(
transformed_,
load_and_transform_data(1),
format = "rds"
),
tar_target(
dc_data,
number_of("District of Columbia", transformed_),
format = "rds"
),
tar_target(
md_data,
number_of("Maryland", transformed_),
format = "rds"
),
tar_target(
va_data,
number_of("Virginia", transformed_),
format = "rds"
),
tar_target(
national_data,
number_of("national", transformed_),
format = "rds"
),
tar_target(
states_vector,
united_states_total_states(),
format = "rds"
),
tar_target(
states_and_territories,
number_of(states_vector, transformed_),
format = "rds"
),
tar_target(
year.strikes.2024.monthly,
month_year_var_number(
state_var = "national",
year_var = 2024,
transformed_data = transformed_
),
format = "rds"
),
tar_target(
year.strikes.2023.monthly,
month_year_var_number(
state_var = "national",
year_var = 2023,
transformed_data = transformed_
),
format = "rds"
),
tar_render(
paper,
here("paper", "strike_analysis.rmd")
),
tar_target(
target_list,
{
list(
dc_data = dc_data,
md_data = md_data,
va_data = va_data,
national_data = national_data,
year.strikes.2024.monthly = year.strikes.2024.monthly,
year.strikes.2023.monthly = year.strikes.2023.monthly,
states_and_territories = states_and_territories
)
}
),
tar_target(output_file,
write_data_to_excel(target_list,
here("data", "output", "tableau_upload.xlsx")),
format = "file")
)
tar_make()
tar_visnetwork()
