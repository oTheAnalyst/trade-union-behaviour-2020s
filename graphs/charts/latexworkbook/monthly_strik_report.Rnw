
\documentclass[11pt]{article}

% Packages for graphics & layout
\usepackage{graphicx}
\usepackage{epstopdf}
\usepackage{caption}
\usepackage{subcaption}
\usepackage{booktabs}
\usepackage[a4paper,margin=0.5in]{geometry}
\usepackage{lipsum}
\usepackage{multicol}

\usepackage[utf8]{inputenc}
\usepackage{enumitem}

% Packages for math
\usepackage{amsmath}
\usepackage{amsfonts}
\usepackage{amssymb}

% Package for bibliography
\usepackage{natbib}
\usepackage{hyperref}

% listing setup \usepackage{listings}
\usepackage{color} % For syntax highlighting color
\captionsetup{labelfont=bf}
\setlength{\parskip}{0.5\baselineskip}


\title{\textbf{Data Analysis Report}}
\author{Michael V Cumbo}
\date{\today}

\begin{document}

\maketitle

\section{Introduction}
This paper was written in response to the United Auto Workers strike and the SAG-AFTRA strike of 2023. The goal of gathering the data is to contextualize the state of trade union power in the United States, blending data analysis with a literature review. 
The data in this paper will contextualize union power in a select number of nation-states, adding perspective to the modes of influence unions have.

This report is a month to month analysis of labor action tracker newly recorded data. The report should give an assessment of trends in the strike activity.
The regions in focus will be the DMV which consist of The District of Columbia, Maryland and Virginia.

\section{Data Prep}
<<Loading data,echo = TRUE, fig.align='center',warning = FALSE, message = FALSE, out.width='0.7\\linewidth'>>=
source("~/Lab2/Trade_Union_Global_Analysis/summary_analysis/Enviroment_Setup.R")

suppressPackageStartupMessages({
  library(ggplot2)
  library(dplyr)
})

# connect to the database and pull out the sheet
setwd("~/workbook")
con <- dbConnect(RSQLite::SQLite(), "trade_union_data.db")
dbListTables(con)
february <- as_tibble(dbReadTable(con, "LAT-02.19.24"))
dbDisconnect(con)
@

<<Data Prep,echo = TRUE, fig.align='center',warning = FALSE, message = FALSE, out.width='0.7\\linewidth'>>=

# Convert Timestamp column to POSIXct format
february$Timestamp <- as.POSIXct(february$Timestamp,
  format = "%m/%d/%Y %H:%M:%S"
)

# mutate zip code to a character
february <- february %>%
  mutate(
    ZipCode = as.character(ZipCode),
    BargainingUnitSize = parse_number(as.character(BargainingUnitSize)),
    ApproximateNumberofParticipants =
      parse_number(as.character(ApproximateNumberofParticipants)),
    Date = format(Timestamp, "%Y-%m-%d"),
    month = format(Timestamp, "%B"),
    Year = format(Timestamp, "%Y"),
    DurationAmount = as.integer(DurationAmount)
  )
@

<<Checking the data against the spreed sheet, echo = FALSE, fig.align='center',warning = FALSE, message = FALSE, out.width='0.7\\linewidth'>>=
# check the number of non NA and NA's in thsi column against the sheet
count_data_busize <- sum(!is.na(february$BargainingUnitSize))
count_na_busize <- sum(is.na(february$BargainingUnitSize))
# exmain the number of notes
count_number_of_notes <- sum(!is.na(february$Notes))
print(paste(
  "the total number of available data points in the BargainingUnitSize vector is",
  count_data_busize
))
print(paste(
  "the total number of missing/blank data points in the BargainingUnitSize vector is",
  count_na_busize
))
print(paste(
  "the total number of missing/blank data points in the notes vector is",
  count_number_of_notes
))
@


<<creation of the GGPlot function, echo = FALSE, fig.align='center',warning = FALSE, message = FALSE, out.width='0.7\\linewidth'>>=
monthly_plot <- function(state_var, year_var) {
  if (length(year_var) == 1) {
    d <- february %>%
      filter(State == state_var, Year == year_var) %>%
      ggplot(aes(x = month)) +
      geom_bar() +
      labs(title = paste("Number of Strikes in", state_var)) +
      common_theme()
  } else {
    d <- february %>%
      filter(State == state_var, Year %in% year_var) %>%
      ggplot(aes(x = month)) +
      geom_bar() +
      labs(title = paste("Number of Strikes in", state_var, "Per Month")) +
      facet_wrap(~Year, scales = "free_x") +
      common_theme()
  }
  return(d)
}
years <- c("2021", "2022", "2023", "2024")
@

\clearpage
\section{Data Analysis}
<<another sentence function,echo = FALSE, fig.align='center',warning = FALSE, message = FALSE, out.width='0.7\\linewidth'>>=
number_of <- function(state_var, year_var) {
  # If year_var is a single value, convert it to a vector
  if (!is.vector(year_var)) {
    year_var <- as.vector(year_var)
  }
  result <- february %>%
    filter(State == state_var, Year %in% year_var) %>%
    group_by(State, Year) %>%
    summarise(
      labor_org_count = n_distinct(LaborOrganization),
      strikes = n(),
      .groups = "drop"
    )
  # Extract the labor_org_count value from the tibble
  labor_org_count <- sum(result$labor_org_count)
  # Create the paragraph
  if (length(year_var) > 1) {
    paragraph <- paste(
      "The number of active labor organizations during the selected", "\n",
      "period of",
      paste(year_var, collapse = ", "),
      "in", state_var, "is", labor_org_count, ".\n"
    )
  } else {
    paragraph <- paste(
      "The number of active labor organizations during the", "\n",
      "selected year of",
      year_var, "in", state_var, "is", labor_org_count, ".\n"
    )
  }
  # Print the paragraph
  cat(paragraph)
  # Print the result
  print(result)
}

@

<<calling the ggplots for DC,echo = FALSE, fig.align='center',warning = FALSE, message = FALSE, out.width='0.7\\linewidth'>>=
monthly_plot("District of Columbia", years)
number_of("District of Columbia", years)
@

<<calling the ggplots for Maryland,echo = FALSE, fig.align='center',warning = FALSE, message = FALSE, out.width='0.7\\linewidth'>>=
monthly_plot("Maryland", years)
number_of("Maryland", years)
@

<<calling the ggplots Virginia,echo = FALSE, fig.align='center',warning = FALSE, message = FALSE, out.width='0.7\\linewidth'>>=
monthly_plot("Virginia", years)
number_of("Virginia", years)

@

\end{document}
